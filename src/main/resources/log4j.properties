# Set everything to be logged to the console
log4j.rootLogger=INFO, fileAppender
log4j.rootCategory=INFO, fileAppender

log4j.appender.fileAppender=org.apache.log4j.RollingFileAppender
log4j.appender.fileAppender.encoding=UTF-8
log4j.appender.fileAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.fileAppender.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n
log4j.appender.fileAppender.file=logs\\spark_sport_monitor.log
log4j.appender.fileAppender.maxBackupIndex=5
log4j.appender.fileAppender.maxFileSize=50MB

#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.target=System.err
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# Set the default spark-shell log level to WARN. When running the spark-shell, the
# log level for this class is used to overwrite the root logger's log level, so that
# the user can have different defaults for the shell and regular Spark apps.
##log4j.logger.org.apache.spark.repl.Main=WARN

# Settings to quiet third party logs that are too verbose
##log4j.logger.org.spark_project.jetty=WARN
##log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
##log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
##log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
##log4j.logger.org.apache.parquet=ERROR
##log4j.logger.parquet=ERROR

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support
##log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
##log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR